/*
 * Copyright (C) 2024 BIRU
 *
 * This file is part of Tenzu.
 *
 * Tenzu is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <https://www.gnu.org/licenses/>.
 *
 * You can contact BIRU at ask@biru.sh
 *
 */

@use '@angular/material' as mat;

.mdc-button {
  &.primary-button .mdc-button__label, &.secondary-button .mdc-button__label, &.tertiary-button .mdc-button__label {
    z-index: 0;
  }
  @include mat.button-overrides((
    filled-container-shape: 4px,
    outlined-container-shape: 4px,
    filled-container-height: 32px,
    outlined-container-height: 32px,
    filled-horizontal-padding: 12px,
    outlined-horizontal-padding: 12px,
    outlined-icon-spacing: 4px,
    filled-icon-spacing: 4px,
  ));
}

.mat-mdc-icon-button {
  line-height: 24px;
  @include mat.icon-button-overrides((
    icon-size:  24px,
    state-layer-size: 32px
  ));
  mat-icon {
    width: 24px;
    height: 24px;
    font-size: 24px;
  }
  &.mat-mdc-button-base .mat-mdc-button-persistent-ripple::before {
    opacity: 0.1;
  }
  &.icon-sm {
    line-height: 16px;
    @include mat.icon-button-overrides((
      icon-size:  16px,
      state-layer-size: 24px
    ));
    mat-icon {
      width: 16px;
      height: 16px;
      font-size: 16px;
    }
  }

  &.icon-md {
    line-height: 24px;
    @include mat.icon-button-overrides((
      icon-size:  24px,
      state-layer-size: 32px
    ));
    mat-icon {
      width: 24px;
      height: 24px;
      font-size: 24px;
    }
  }

  &.icon-lg {
    line-height: 32px;
    @include mat.icon-button-overrides((
      icon-size:  32px,
      state-layer-size: 40px
    ));
    mat-icon {
      width: 32px;
      height: 32px;
      font-size: 32px;
    }
  }

  &.icon-xl {
    line-height: 48px;
    @include mat.icon-button-overrides((
      icon-size:  48px,
      state-layer-size: 56px
    ));
    mat-icon {
      width: 48px;
      height: 48px;
      font-size: 48px;
    }
  }
}

@mixin create-button-variant($theme, $variant) {
  .#{$variant}-button {
    &.mat-mdc-outlined-button {
      box-shadow: 0 0 3px mat.get-theme-color($theme, $variant, 80);
      &.mat-mdc-button-disabled {
        box-shadow: none;
      }
    }
    &.mdc-button--unelevated {
      box-shadow: 0 0 9px mat.get-theme-color($theme, $variant, 80);
      border: solid 1px  mat.get-theme-color($theme, $variant, 80);
      margin: 3px;
      &.mat-mdc-button-disabled {
        box-shadow: none;
        border: solid 1px currentColor;
        margin: 0;
      }
    }
    @include mat.button-color($theme, $color-variant: $variant);
    @include mat.button-overrides((
      outlined-outline-color: mat.get-theme-color($theme, $variant, 80),
      outlined-state-layer-color: mat.get-theme-color($theme, $variant, 50),
      filled-state-layer-color: mat.get-theme-color($theme, $variant, 50),
      filled-container-color: mat.get-theme-color($theme, $variant, 90),
      outlined-label-text-color: mat.get-theme-color($theme, $variant, 30),
      filled-label-text-color: mat.get-theme-color($theme, $variant, 30)
    ));
    @include mat.icon-button-overrides((
      state-layer-color: mat.get-theme-color($theme, $variant, 50),
      ripple-color: mat.get-theme-color($theme, $variant, 30)
    ));
    .mat-icon {
      @include mat.icon-overrides((color: mat.get-theme-color($theme, $variant, 40)));
    }
    &:focus {
      outline: solid mat.get-theme-color($theme, primary, 80) 3px;
    }
  }
}

@mixin color-and-typo($theme) {
  @include mat.button-overrides((
    filled-hover-state-layer-opacity: 0.75,
    outlined-hover-state-layer-opacity: 0.75,
    filled-focus-state-layer-opacity: 0.75,
    outlined-focus-state-layer-opacity: 0.75,
    filled-disabled-container-color: mat.get-theme-color($theme, neutral, 95),
    filled-disabled-label-text-color: mat.get-theme-color($theme, neutral, 80),
    outlined-disabled-label-text-color: mat.get-theme-color($theme, neutral, 80),
    outlined-disabled-outline-color: mat.get-theme-color($theme, neutral, 90),
    filled-label-text-size : mat.get-theme-typography($theme, label-large, font-size),
    outlined-label-text-size: mat.get-theme-typography($theme, label-large, font-size),
  ));
  .mat-mdc-icon-button {
    @include mat.icon-button-overrides((
      state-layer-color: mat.get-theme-color($theme, neutral-variant, 60),
      hover-state-layer-opacity: 0.2,
      focus-state-layer-opacity: 0.1
    ));
      &:focus {
        outline: solid mat.get-theme-color($theme, neutral-variant, 80) 3px;
      }
      .mat-icon {
        @include mat.icon-overrides((color: mat.get-theme-color($theme, neutral-variant, 60)));
      }
  }

  @include create-button-variant($theme, primary);
  @include create-button-variant($theme, secondary);
  @include create-button-variant($theme, tertiary);
  @include create-button-variant($theme, error);
}

